.grid-two-by-two {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 7px;
  margin-bottom: 7px;
}

.checkbox-item {
  display: flex;
  align-items: center;
}

.checkbox-item label {
  display: inline-block;
  width: 100px;
  text-align: right;
}

.checkbox-item input {
  margin-right: 10px;
}

.form-inline {
  display: flex;
  flex-flow: row wrap;
  flex-direction: column;
  align-items: stretch;
}

.form-inline label {
  display: inline-block;
  align-items: center;
  margin: 5px 10px 5px 0;
}

.form-row {
  margin: 5px;
}

.margin-top {
  margin-top: 5px;
}

.button-container {
  display: flex;
  gap: 10px;
  margin-top: 5px;
}

.receive-pointer-events {
  pointer-events: initial;
}

.flex-group-center,
.flex-group-left,
.flex-group-right {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  text-align: center;
}

.flex-group-left {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  text-align: left;
}

.flex-group-right {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  text-align: right;
}

.flexshrink {
  -webkit-box-flex: 0;
  -ms-flex: 0;
  flex: 0;
}

.flex-between {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.flexlarge {
  -webkit-box-flex: 2;
  -ms-flex: 2;
  flex: 2;
}

.flex-align-center {
  align-self: center;
}

.align-left {
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  text-align: left;
}

.align-right {
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  text-align: right;
}

.align-center {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  text-align: center;
}

.hidden {
  display: none;
}

/**
 * UI Panel specific styles
 */
.ui-panel {
  /* Set the left and right margins to align with the player panel */
  margin-left: 15px;
  margin-right: 5px;

  /* A bit of space between us and the player panel */
  margin-bottom: 6px;
  border: 1px solid black;

  display: flex;
  justify-content: center;
}

/**
 * The GM buttons for time control
 */
.time-button-container {
  i {
    color: #ffffff;
  }

  i:hover {
    color: goldenrod;
    transform: scale(1.4);
    /* box-shadow: 0 0 4px rgba(35, 234, 0, 0.941); */
  }

  i:active {
    color: rgb(217, 86, 39);
    transform: scale(1.4);
  }
}

/**
 * Display strings for time of day
 */
.etk-timeofday {
  /* color: goldenrod; */
  margin-bottom: 5px;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  text-align: center;
  overflow-wrap: break-word;
  /* max-width: 90%; */
}

/**
 * Styles grafted from Global Progress Clocks are below here.
 * They control the circular clocks used to display Dragonbane time.
 */
/* .etk-clock-panel {
  gap: 5px;
  right: 0;

  .etk-clock-list {
    align-items: center;
  }
} */

.etk-clock-panel .etk-clock-entry {
  display: flex;
  flex-direction: row;
  align-items: center;
  height: 44px;
  border-radius: 5px 22px 22px 5px;
  border-right: none;

  &.hidden {
    display: none;
  }

  .etk-name-section {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 0 4px 2px 8px;
    overflow-y: hidden;

    .name {
      align-items: center;
      cursor: initial;
      display: flex;
      justify-content: end;
    }
  }

  .etk-clock {
    cursor: pointer;
    width: 44px;
    height: 44px;

    --spoke-width: 2px;

    align-self: center;
    aspect-ratio: 1 / 1;

    --filled-ratio: calc(var(--filled) / var(--areas) * 1turn);
    background: conic-gradient(var(--clock-color) var(--filled-ratio), var(--background) var(--filled-ratio) 1turn);
    border-radius: 50%;
    border: black var(--spoke-width) solid;

    position: relative;

    .etk-spoke {
      width: var(--spoke-width);

      /* Make the spokes slightly larger than the inner radius so they overlay half the outer border, preventing subpixel gaps */
      height: calc(50% + .5 * var(--spoke-width));

      top: calc(-.5 * var(--spoke-width));
      right: calc(50% - var(--spoke-width) / 2);

      background: black;
      position: absolute;

      transform-origin: center bottom;
      transform: rotate(calc((var(--index) * 1turn) / var(--areas)));
    }
  }
}